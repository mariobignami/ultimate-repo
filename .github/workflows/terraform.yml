name: 'Terraform'
run-name: Infra Deploy of ${{inputs.devops_tf_verb}}

on:
  workflow_dispatch:
    inputs:
      devops_tf_verb:
        description: 'Terraform apply/plan/destroy'
        required: true
        default: 'plan'

env:
  GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      # - name: Download service account key
      #   run: gsutil cp gs://devops-bucket-ult/ultimate-app-gcp-52aac8754b10.json ${{ github.workspace }}/service-account-key.json
      #   env:
      #     GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/service-account-key.json

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan or Apply
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "This is a push event, running Terraform plan..."
            terraform plan
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "This is a manual workflow_dispatch event. Checking for plan/apply..."
            if [ "${{ inputs.devops_tf_verb }}" == "plan" ]; then
              echo "Running Terraform plan..."
              terraform plan
            elif [ "${{ inputs.devops_tf_verb }}" == "apply" ]; then
              echo "Running Terraform apply..."
              terraform apply -auto-approve
            else
              echo "Invalid input. Please choose 'plan' or 'apply'."
              exit 1
            fi
          else
            echo "Unexpected event type. Exiting..."
            exit 1
          fi
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}