name: 'Terraform'
run-name: Infra Deploy of ${{inputs.devops_tf_verb}}

on:
  workflow_dispatch:
    inputs:
      devops_tf_verb:
        description: 'Terraform apply/plan/destroy'
        required: true
        default: 'plan'

env:
  GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositÃ³rio
        uses: actions/checkout@v2

      - name: Authenticate on GCP
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "${GOOGLE_APPLICATION_CREDENTIALS}" > gcp_creds.json
          gcloud auth activate-service-account --key-file=gcp_creds.json
      
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan, Apply or Destroy
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "This is a push event, running Terraform plan..."
            terraform plan -var="google_credentials=${{ env.GOOGLE_APPLICATION_CREDENTIALS }}"
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "This is a manual workflow_dispatch event. Checking for plan/apply/destroy..."
            if [ "${{ inputs.devops_tf_verb }}" == "plan" ]; then
              echo "Running Terraform plan..."
              terraform plan -var="google_credentials=${{ env.GOOGLE_APPLICATION_CREDENTIALS }}"
            elif [ "${{ inputs.devops_tf_verb }}" == "apply" ]; then
              echo "Running Terraform apply..."
              terraform apply -auto-approve -var="google_credentials=${{ env.GOOGLE_APPLICATION_CREDENTIALS }}"
            elif [ "${{ inputs.devops_tf_verb }}" == "destroy" ]; then
              echo "Running Terraform destroy..."
              terraform destroy -auto-approve -var="google_credentials=${{ env.GOOGLE_APPLICATION_CREDENTIALS }}"
            else
              echo "Invalid input. Please choose 'plan', 'apply' or 'destroy'."
              exit 1
            fi
          else
            echo "Unexpected event type. Exiting..."
            exit 1
          fi